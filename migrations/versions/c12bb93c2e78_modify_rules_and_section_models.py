"""Modify rules and section models

Revision ID: c12bb93c2e78
Revises: beb56d8e00ed
Create Date: 2025-09-10 23:08:45.790277

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "c12bb93c2e78"
down_revision: Union[str, Sequence[str], None] = "beb56d8e00ed"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("rules")
    op.drop_table("sections")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "sections",
        sa.Column("name", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.Column("slug", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "status",
            postgresql.ENUM("ACTIVE", "INACTIVE", name="sectionstatus"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("sections_pkey")),
        sa.UniqueConstraint(
            "slug",
            name=op.f("sections_slug_key"),
            postgresql_include=[],
            postgresql_nulls_not_distinct=False,
        ),
    )
    op.create_table(
        "rules",
        sa.Column("name", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.Column(
            "profile_type",
            postgresql.ENUM("PREPAID", "HYBRID", name="profiletype"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "balance_type",
            postgresql.ENUM("MAIN_BALANCE", "CRED", name="balancetype"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "status",
            postgresql.ENUM("DRAFT", "IN_PRODUCTION", "TO_VALIDATE", name="status"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("section_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "database_table_name",
            postgresql.ARRAY(sa.VARCHAR()),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "config", postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False
        ),
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("rules_pkey")),
    )
    # ### end Alembic commands ###
